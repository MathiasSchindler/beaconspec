


Network Working Group                                            J. Voss
Internet-Draft                                   Verbundzentrale des GBV
Intended status: Informational                              M. Schindler
Expires: December 23, 2012                    Wikimedia Deutschland e.V.
                                                              Th. Berger
                                                               Gymel.com
                                                           June 21, 2012


                        BEACON link dump format
                          draft-voss-beacon-00

Abstract

   This document specifies BEACON, a data interchange format for large
   numbers of uniform links.

Status of this Memo

   This Internet-Draft is submitted in full conformance with the
   provisions of BCP 78 and BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF).  Note that other groups may also distribute
   working documents as Internet-Drafts.  The list of current Internet-
   Drafts is at http://datatracker.ietf.org/drafts/current/.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   This Internet-Draft will expire on December 23, 2012.

Copyright Notice

   Copyright (c) 2012 IETF Trust and the persons identified as the
   document authors.  All rights reserved.

   This document is subject to BCP 78 and the IETF Trust's Legal
   Provisions Relating to IETF Documents
   (http://trustee.ietf.org/license-info) in effect on the date of
   publication of this document.  Please review these documents
   carefully, as they describe your rights and restrictions with respect
   to this document.  Code Components extracted from this document must
   include Simplified BSD License text as described in Section 4.e of
   the Trust Legal Provisions and are provided without warranty as
   described in the Simplified BSD License.



Voss, et al.            Expires December 23, 2012               [Page 1]

Internet-Draft                   Beacon                        June 2012


Table of Contents

   1.  Introduction . . . . . . . . . . . . . . . . . . . . . . . . .  3
     1.1.  Overview . . . . . . . . . . . . . . . . . . . . . . . . .  3
     1.2.  Notational Conventions . . . . . . . . . . . . . . . . . .  3
     1.3.  String normalization . . . . . . . . . . . . . . . . . . .  4
     1.4.  URI patterns . . . . . . . . . . . . . . . . . . . . . . .  4
     1.5.  Mappings to RDF  . . . . . . . . . . . . . . . . . . . . .  5
   2.  Links  . . . . . . . . . . . . . . . . . . . . . . . . . . . .  6
   3.  Meta fields  . . . . . . . . . . . . . . . . . . . . . . . . .  6
     3.1.  Fields for link construction . . . . . . . . . . . . . . .  7
       3.1.1.  prefix . . . . . . . . . . . . . . . . . . . . . . . .  8
       3.1.2.  target . . . . . . . . . . . . . . . . . . . . . . . .  8
       3.1.3.  link . . . . . . . . . . . . . . . . . . . . . . . . .  8
       3.1.4.  message  . . . . . . . . . . . . . . . . . . . . . . .  8
     3.2.  Annotating meta fields . . . . . . . . . . . . . . . . . .  8
       3.2.1.  name . . . . . . . . . . . . . . . . . . . . . . . . .  8
       3.2.2.  description  . . . . . . . . . . . . . . . . . . . . .  9
       3.2.3.  creator  . . . . . . . . . . . . . . . . . . . . . . .  9
       3.2.4.  contact  . . . . . . . . . . . . . . . . . . . . . . .  9
       3.2.5.  institution  . . . . . . . . . . . . . . . . . . . . . 10
       3.2.6.  reference  . . . . . . . . . . . . . . . . . . . . . . 10
       3.2.7.  feed . . . . . . . . . . . . . . . . . . . . . . . . . 10
       3.2.8.  timestamp  . . . . . . . . . . . . . . . . . . . . . . 10
       3.2.9.  update . . . . . . . . . . . . . . . . . . . . . . . . 11
       3.2.10. qualifier  . . . . . . . . . . . . . . . . . . . . . . 11
   4.  Link fields and construction . . . . . . . . . . . . . . . . . 11
   5.  Serialization  . . . . . . . . . . . . . . . . . . . . . . . . 13
     5.1.  BEACON text format . . . . . . . . . . . . . . . . . . . . 13
     5.2.  BEACON XML format  . . . . . . . . . . . . . . . . . . . . 14
   6.  Security Considerations  . . . . . . . . . . . . . . . . . . . 14
   7.  References . . . . . . . . . . . . . . . . . . . . . . . . . . 15
     7.1.  Normative References . . . . . . . . . . . . . . . . . . . 15
     7.2.  Informative References . . . . . . . . . . . . . . . . . . 15
   Appendix A.  Interpreting BEACON links . . . . . . . . . . . . . . 16
     A.1.  RDF triples  . . . . . . . . . . . . . . . . . . . . . . . 16
     A.2.  HTML links . . . . . . . . . . . . . . . . . . . . . . . . 17
   Appendix B.  RELAX NG Schema for BEACON XML  . . . . . . . . . . . 18
   Authors' Addresses . . . . . . . . . . . . . . . . . . . . . . . . 19












Voss, et al.            Expires December 23, 2012               [Page 2]

Internet-Draft                   Beacon                        June 2012


1.  Introduction

1.1.  Overview

   BEACON is a data interchange format for large numbers of uniform
   links.  A BEACON link dump consists of:

   -  a set of links (Section 2), each consisting of four elements
      (Section 2),

   -  a set of meta fields (Section 3).

   All links typically share a common URI pattern for source and for
   target, respectively.  For instance a BEACON dump could consist of
   links between two domains that use different local identifier
   systems:

   http://example.org/{ID1} ---> http://example.com/{ID2}

   A special case is the use of the same local identifier that can be
   used to construct both, source and target of a link, for instance:

   http://example.org/{ID}  ---> http://example.com/{ID}.html

   A BEACON link dump can be serialized in a condense BEACON text format
   (Section 5.1) and in BEACON XML format (Section 5.2).  The link dump
   can further be serialized in RDF, if the relation type of its links
   is an URI.

1.2.  Notational Conventions

   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
   document are to be interpreted as described in [RFC2119].

   The formal grammar rules in this document are to be interpreted as
   described in [RFC5234], including the following core ABNF syntax
   rules:

    ALPHA       =  %x41-5A / %x61-7A   ; A-Z / a-z
    DIGIT       =  %x30-39             ; 0-9
    HEXDIG      =  DIGIT / "A" / "B" / "C" / "D" / "E" / "F"
    HTAB        =  %x09                ; horizontal tab
    LF          =  %x0A                ; linefeed
    CR          =  %x0D                ; carriage return
    SP          =  %x20                ; space

   The "SCHEME" rule is copied from [RFC3986]:



Voss, et al.            Expires December 23, 2012               [Page 3]

Internet-Draft                   Beacon                        June 2012


    SCHEME      =  ALPHA *( ALPHA / DIGIT / "+" / "-" / "." )

   In addition, the operator "-" is used to express exceptions to forbid
   line breaks and vertical bars in the following rules:

    BEACONLINE  =  *( CHAR - LINEBREAK )

    BEACONVALUE =  *( CHAR - ( LINEBREAK / VBAR ) )

    LINEBREAK   =  LF | CR LF | CR

    VBAR        =  %x7C          ; vertical bar ("|")

1.3.  String normalization

   A Unicode string is normalized according to this specification, by
   stripping leading and trailing whitespace and by replacing all
   "WHITESPACE" character sequences by a single space ("SP").

    WHITESPACE  =  1*( CR | LF | HTAB | SP )

   The set of allowed Unicode characters in BEACON is the set of valid
   Unicode characters from UCS which can also be expressed in XML 1.0,
   excluding some discouraged control characters:

    CHAR        =  WHITESPACE / %x21-7E / %xA0-D7FF / %xE000-FFFD
                /  %x10000-1FFFD / %x20000-2FFFD / %x30000-3FFFD
                /  %x40000-4FFFD / %x50000-5FFFD / %x60000-6FFFD
                /  %x70000-7FFFD / %x80000-8FFFD / %x90000-9FFFD
                /  %xA0000-AFFFD / %xB0000-BFFFD / %xC0000-CFFFD
                /  %xD0000-DFFFD / %xE0000-EFFFD / %xF0000-FFFFD
                /  %x10000-10FFFD

   An application MAY allow additional characters or disallow additional
   characters by stripping them or by replacing them with the
   replacement character "U+FFFD".

   Applications SHOULD further apply Unicode Normalization Form
   Canonical Composition (NFKC) to all strings.

1.4.  URI patterns

   A URI pattern in this specification is an URI Template, as defined in
   [RFC6570], with all template expressions being either "{ID}" for
   simple string expansion or "{+ID}" for reserved expansion.  If no
   template expression is given, the pattern MUST be processed as if the
   expression "{ID}" was appended.  For this reason the following URI
   patterns are equal:



Voss, et al.            Expires December 23, 2012               [Page 4]

Internet-Draft                   Beacon                        June 2012


    http://example.org/
    http://example.org/{ID}

   A URI pattern is used to construct a URI by replacing all template
   expressions with an identifier value.  All identifier characters in
   the "unreserved" range from [RFC3986], and characters in the
   "reserved" range or character sequences matching the "pct-encoded"
   rule for expressions being "{+ID}", are copied literally.  All other
   characters are copied the URI as the sequence of pct-encoded triplets
   corresponding to that character's encoding in UTF-8 [RFC3629].  The
   referenced character ranges are imported here from [RFC3986] for
   convenience:

    pct-encoded    =  "%" HEXDIG HEXDIG
    unreserved     =  ALPHA / DIGIT / "-" / "." / "_" / "~"
    reserved       =  gen-delims / sub-delims
    gen-delims     =  ":" / "/" / "?" / "#" / "[" / "]" / "@"
    sub-delims     =  "!" / "$" / "&" / "'" / "(" / ")"
                   /  "*" / "+" / "," / ";" / "="

   A URI pattern is allowed to contain the broader set of characters
   allowed in Internationalized Resource Identifiers (IRI) [RFC3987].
   The URI constructed from a URI pattern by template processing can be
   transformed to an IRI by following the process defined in Section 3.2
   of [RFC3987].

    Example value    Expression   Copied as

     path/dir          {ID}        path%2Fdir
     path/dir          {+ID}       path/dir
     Hello World!      {ID}        Hello%20World%21
     Hello World!      {+ID}       Hello%20World!
     Hello%20World     {ID}        Hello%2520World
     Hello%20World     {+ID}       Hello%20World
     Mueller            {ID}        M%C3%BCller
     Mueller            {+ID}       M%C3%BCller
     M%C3%BCller       {ID}        M%25C3%25BCller
     M%C3%BCller       {+ID}       M%C3%BCller

1.5.  Mappings to RDF

   RDF snippets in this document are given in Turtle syntax [TURTLE]
   with the following namespace prefixes:

   @prefix foaf: <http://xmlns.com/foaf/0.1/> .
   @prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
   @prefix dcterms:  <http://purl.org/dc/terms/extent> .




Voss, et al.            Expires December 23, 2012               [Page 5]

Internet-Draft                   Beacon                        June 2012


   The base URI "<>" is used in examples to denote the URI of a Beacon
   dump.


2.  Links

   A link in BEACON is a typed connection between two resources that are
   identified by URIs [RFC3986].  A link is compromised of four
   elements:

   -  a source URI,

   -  a target URI,

   -  a relation type,

   -  a qualifier.

   A BEACON link dump is an annotated set of links with identical
   relation type.  A relation type is either a registered link type from
   the IANA link relations registry [RFC5988] or an URI.  Some examples
   of relation types:

    alternate
    describedby
    replies
    http://www.w3.org/2002/07/owl#sameAs
    http://xmlns.com/foaf/0.1/isPrimaryTopicOf
    http://purl.org/spar/cito/cites

   In a serialized BEACON dump (Section 5) the relation type is
   specified by the link meta field (Section 3).  The other elements of
   a link are constructed from link fields (Section 4) and meta fields
   given in a serialization.

   A qualifier is an optional Unciode that can be used to further
   describe the link or parts of it.  Its value is the empty string by
   default.

    QUALIFIER      =  *( CHAR - LINEBREAK )

   The meaning of a link and its elements is not defined by this
   specification, but guidelines are given in Appendix A.


3.  Meta fields

   A BEACON dump SHOULD contain a set of meta fields, each field



Voss, et al.            Expires December 23, 2012               [Page 6]

Internet-Draft                   Beacon                        June 2012


   identified by its name.  Meta field names are build of lowercase
   letters "a-z".  In BEACON text format (Section 5.1), meta field names
   are case insensitive and SHOULD be given in uppercase letters.  Valid
   meta fields are defined in the following.  Additional meta fields,
   not defined in this specification SHOULD be ignored.  All meta field
   values MUST be normalized Unicode strings Section 1.3.  Missing meta
   fields and meta fields with the empty string as normalized field
   value MUST be set to their default value, which is the empty string
   unless noted otherwise.

3.1.  Fields for link construction

   The meta fields "prefix", "target", "link", and "message" are only
   used to abbreviate link elements in BEACON serializations.
   Applications MUST ignore these fields after they have been used to
   construct a full BEACON dump from a serialized BEACON file.  For
   instance the following BEACON text serialization contains a single
   link:

    #PREFIX: http://example.org/
    #TARGET: http://example.com/
    #MESSAGE: Hello World!

    foo

   The same link could be serialized as following, without any meta
   fields:

    http://example.org/foo|Hello World!|http://example.com/foo

   The default meta fields values of this examples could also be
   specified as:

    #PREFIX: {+ID}
    #TARGET: {+ID}
    #MESSAGE: {about}

   Another possible serialization would be:

    #PREFIX: http://example.org/
    #TARGET: http://example.com/
    #MESSAGE: Hello {about}

    foo|World!

   The link line in this example is equal to:

    foo|World!|foo



Voss, et al.            Expires December 23, 2012               [Page 7]

Internet-Draft                   Beacon                        June 2012


   Applications SHOULD ignore equal links in one Beacon dump and it is
   RECOMMENDED to indicate duplicated links with a warning.

3.1.1.  prefix

   The prefix field specifies an URI pattern that is used to construct
   link sources.  If no prefix meta field was specified, the default
   value "{+ID}" is used.  The name "prefix" was choosen to keep
   backwards compatibility with existing BEACON dumps.

3.1.2.  target

   The target field specifies an URI pattern to construct link targets.
   If no target meta field was specified, the default value "{+ID}" is
   used.

3.1.3.  link

   The link field specifies the relation type for all links in a BEACON
   dump.  The default relation type is
   "http://www.w3.org/2000/01/rdf-schema#seeAlso".

3.1.4.  message

   The message meta field is used as template for link qualifiers.  The
   default value is "{about}".  Note that all link qualifiers are equal,
   if the field value does not contain the sequence "{about}".

3.2.  Annotating meta fields

   The meta fields "name", "description", "institution", "creator",
   "contact", "qualifier", "reference", "feed", "timestamp", and
   "update" describe a BEACON dump.  The meaning of these fields is
   defined by RDF properties from the DCMI Metadata Terms [DCTERMS] and
   other vocabularies.  A mapping of annotating meta fields to RDF
   properties is given in Appendix A.

3.2.1.  name

   The name meta field contains a name or title of the BEACON dump
   and/or of all of its targets.  For instance if all links point to
   resources in a database, the name meta field contains the name of the
   database.

   The RDF property of this field is "http://purl.org/dc/terms/title"
   from the DCMI Metadata Terms.





Voss, et al.            Expires December 23, 2012               [Page 8]

Internet-Draft                   Beacon                        June 2012


3.2.2.  description

   The description meta field contains a human readable description of
   the BEACON dump.

   The RDF property of this field is
   "http://purl.org/dc/terms/description" from the DCMI Metadata Terms.

3.2.3.  creator

   The creator meta field contains the URI or the name of the person,
   organization, or a service primarily responsible for making the
   BEACON dump.  This field corresponds to the "creator" from the DCMI
   Metadata Terms.  The creator is an instace of the "Agent" class from
   the FOAF vocabulary.

   The following examples of meta field values:

   Bea Beacon

   http://example.org/people/bea

   can be mapped to:

   <> dcterms:creator "Bea Beacon" .
   <> dcterms:creator [ a foaf:Agent ; foaf:name "Bea Beacon" ] .

   <> dcterms:creator <http://example.org/people/bea> .
   <http://example.org/people/bea> a foaf:Agent .

   This field SHOULD NOT contain a simple URL unless this URL is also
   used as URI.

3.2.4.  contact

   The contact meta field contains an email address or similar contact
   information to reach the creator of the BEACON dump.  The contact
   MUST be a mailbox address as specified in section 3.4 of [RFC5322],
   for instance:

    admin@example.com

    Bea Beacon <bea@example.org>

   The contact meta field corresponds to the "mbox" property and the
   "name" property from the FOAF vocabulary [@FOAF].  The domain of the
   the contact meta field is the Beacon dump.  The sample field values
   can be mapped to:



Voss, et al.            Expires December 23, 2012               [Page 9]

Internet-Draft                   Beacon                        June 2012


    <> dcterms:creator [
        foaf:mbox <mailto:admin@example.com>
    ] .

    <> dcterms:creator [
        foaf:name "Bea Beacon" ;
        foaf:mbox <mailto:bea@example.org>
    ] .

3.2.5.  institution

   The institution meta field contains the organization or individual of
   an institution or publisher responsible for the target database.  The
   field value can be an URI or a literal name.  The

   The RDF property of this field is
   "http://purl.org/dc/terms/publisher" or
   "http://purl.org/dc/terms/creator" (???) from the DCMI Metadata
   Terms.

3.2.6.  reference

   The reference field contains an URL of a website with additional
   information about this BEACON link dump.

   The RDF property of this field is
   "http://xmlns.com/foaf/0.1/homepage" from the FOAF vocabulary.

3.2.7.  feed

   The feed field contains an URL, where to download the BEACON dump
   from.  In addition to standard URL schemes, alternative established
   URI forms for retrieval, such as magnet URIs MAY be allowed.

   The RDF property of this field is "http://rdfs.org/ns/void#dataDump"
   from the VoID vocabulary.

3.2.8.  timestamp

   The timestamp field contains the date of last modification of the
   BEACON dump.  This date MUST conform to the "full-date" or to the
   "date-time" production rule in [RFC3339].  In addition, an uppercase
   "T" character MUST be used to separate date and time, and an
   uppercase "Z" character MUST be present in the absence of a numeric
   time zone offset.  Some examples of valid timestamp values:

    2012-05-30
    2012-05-30T15:17:36+02:00



Voss, et al.            Expires December 23, 2012              [Page 10]

Internet-Draft                   Beacon                        June 2012


    2012-05-30T13:17:36Z

   The RDF property of this field is "http://purl.org/dc/terms/modified"
   from the DCMI Metadata Terms.

3.2.9.  update

   The update field specifies how frequently the BEACON dump is likely
   to change.  The field corresponds to the "<changefreq>" element in
   Sitemaps XML format [Sitemaps].  Valid values are:

   -  "always"

   -  "hourly"

   -  "daily"

   -  "weekly"

   -  "monthly"

   -  "yearly"

   -  "never"

   The value "always" SHOULD be used to describe BEACON dumps that
   change each time they are accessed.  The value "never" SHOULD be used
   to describe archived BEACON dumps.  Please note that the value of
   this tag is considered a hint and not a command.

   The RDF property of this field is
   "http://web.resource.org/rss/1.0/modules/syndication/updatePeriod"
   from the RSS 1.0 Syndication Module [RSSSYND].

3.2.10.  qualifier

   The optional qualifier field specifies the relation type of relations
   between link target and link qualifier.


4.  Link fields and construction

   Each link in a serialized BEACON dump is given in form of up to four
   fields:

   -  source field,





Voss, et al.            Expires December 23, 2012              [Page 11]

Internet-Draft                   Beacon                        June 2012


   -  optional qualifier field,

   -  optional target field.

   From these fields, combined with the BEACON dump's meta fields
   (Section 3), the full link (Section 2) is constructed.  All field
   values MUST be normalized (Section 1.3) before further processing.
   Missing optional fields MUST be set to the empty string.  The full
   link is then constructed as following:

   The *link source* is constructed from the prefix meta field
   (Section 3.1.1) URI pattern by inserting the source field as
   identifier value, as defined in Section 1.4.

   The *link target* is constructed from the target meta field
   (Section 3.1.2) URI pattern by inserting as identifier value, as
   defined in Section 1.4:

   -  the target field, if the target field is not the empty string,

   -  the source field, otherwise.

   Constructed link sources and link targets MUST be a syntactically
   valid URIs.  A client MUST ignore links with invalid URIs and it
   SHOULD give a warning.

   The *link qualifier* is constructed from the qualifier field and the
   message meta field (Section 3.1.4) as following.  The message field
   value is used as string pattern in which the character sequences
   "{about}" is literally replace by the qualifier field.  A warning
   SHOULD be given if the message meta field does not contain this
   sequence and the qualifier field is not the empty string, because the
   qualifier field is ignored in this case.

   Additional encoding MUST NOT be applied to field values during this
   process.  The resulting string MUST be normalized (Section 1.3) after
   construction.

   The following table illustrates construction of a link:

   meta field    link field(s)   -->  link element
    prefix        source         -->   source
    target        source,target  -->   target
    message       qualifier      -->   qualifier
    link          -              -->   relation type






Voss, et al.            Expires December 23, 2012              [Page 12]

Internet-Draft                   Beacon                        June 2012


5.  Serialization

5.1.  BEACON text format

   A BEACON text file is an UTF-8 encoded Unicode file [RFC3629], split
   into lines by line breaks.  The file consists of a set of lines with
   meta fields, followed by a set of lines with link fields.  A BEACON
   text file MAY begin with an Unicode Byte Order Mark and it SHOULD end
   with a line break:

    BEACONTEXT  =  [ BOM ] [ START ] *METALINE *EMPTY [ LINKS ]

    BOM         =  %xEF.BB.BF     ; Unicode UTF-8 Byte Order Mark

   At least one empty line SHOULD be used to separate meta lines and
   link lines.  The order public of meta lines and the order of link
   lines is irrelevant.

   EMPTY        =  *( *WHITESPACE LINEBREAK )

   The BEACON text file SHOULD start with an additional, fixed meta
   field:

    START       =  "#FORMAT: BEACON" LINEBREAK

   A meta line specifies a meta field (Section 3) and its value.  Meta
   field names are case insensitive and SHOULD be given in uppercase
   letters.

    METALINE    =  "#" METAFIELD ":" METAVALUE LINEBREAK

    METAFIELD   =  "PREFIX" / "TARGET" / "LINK" / "MESSAGE"
                /  "NAME" / "DESCRIPTION" / "INSTITUTION"
                /  "QUALIFIER" / "REFERENCE"
                /  "CONTACT" / "FEED" / "TIMESTAMP" / "UPDATE"

    METAVALUE   =  BEACONLINE

   Each link is given on a link line with its source field, optionally
   follwed by additional fields:

    LINKS       =  LINK *( LINEBREAK LINK ) [ LINEBREAK ]

    LINK        =  SOURCE [ VBAR QUALIFIER [ VBAR TARGET ] ]

    SOURCE      =  BEACONVALUE

    TARGET      =  BEACONVALUE



Voss, et al.            Expires December 23, 2012              [Page 13]

Internet-Draft                   Beacon                        June 2012


5.2.  BEACON XML format

   A BEACON XML file is a valid XML file conforming to the following
   schema.  The file SHOULD be encoded in UTF-8 [RFC3629].  The file
   MUST:

   -  Begin with an opening "<beacon>" tag and end with a closing
      "</beacon>" tag.

   -  Specify the default namespace "http://purl.org/net/example".

   -  Include an empty "<link/>" tag for each link.

   -  Include the source field (Section 4) as XML attribute "id" of each
      "<link/>" element.

   The file MAY further:

   -  Specify meta fields (Section 3) as XML attributes to the
      "<beacon>" tag.

   -  Specify link fields "target" and/or "about" as attributes to the
      "<link>" element.

   All attributes MUST be given in lowercase.  An informal schema of
   BEACON XML is given in Appendix B.

   To process BEACON XML, a complete and stream-processing XML parser,
   for instance the Simple API for XML [SAX], is RECOMMENDED, in favor
   of parsing with regular expressions or similar methods prone to
   errors.  Additional XML attributes of "<link>" elements and "<link>"
   elements without "id" attribute SHOULD be ignored.

   Note that in contrast to BEACON text format, link fields MAY include
   line breaks, which are removed by whitespace normalization.
   Furthermore id field, qualifier field and target field MAY include a
   vertical bar, which is encoded as "%7C" during construction the link.


6.  Security Considerations

   ...TODO...

   (URLs MAY be used to inject code and qualifiers MAY be used to inject
   HTML?)


7.  References



Voss, et al.            Expires December 23, 2012              [Page 14]

Internet-Draft                   Beacon                        June 2012


7.1.  Normative References

   [DCTERMS]  DCMI Usage Board, "DCMI Metadata Terms", Oct 2010.

   [RFC2119]  Bradner, S., "Key words for use in RFCs to Indicate
              Requirement Levels", BCP 14, RFC 2119, March 1997.

   [RFC3339]  Klyne, G., Ed. and C. Newman, "Date and Time on the
              Internet: Timestamps", RFC 3339, July 2002.

   [RFC3629]  Yergeau, F., "UTF-8, a transformation format of ISO
              10646", STD 63, RFC 3629, November 2003.

   [RFC3986]  Berners-Lee, T., Fielding, R., and L. Masinter, "Uniform
              Resource Identifier (URI): Generic Syntax", STD 66,
              RFC 3986, January 2005.

   [RFC3987]  Duerst, M. and M. Suignard, "Internationalized Resource
              Identifiers (IRIs)", RFC 3987, January 2005.

   [RFC5234]  Crocker, D. and P. Overell, "Augmented BNF for Syntax
              Specifications: ABNF", STD 68, RFC 5234, January 2008.

   [RFC5322]  Resnick, P., Ed., "Internet Message Format", RFC 5322,
              October 2008.

   [RFC5988]  Nottingham, M., "Web Linking", RFC 5988, October 2010.

   [RFC6570]  Gregorio, J., Fielding, R., Hadley, M., Nottingham, M.,
              and D. Orchard, "URI Template", RFC 6570, March 2012.

   [Unicode]  The Unicode Consortium, "The Unicode Standard, Version
              6.1", April 2012.

7.2.  Informative References

   [FOAF]     Brickley, D. and L. Miller, "FOAF Vocabulary
              Specification", Aug 2010.

   [RELAX-NGC]
              Clark, J., "RELAX NG Compact Syntax", Nov 2002.

   [RFC5013]  Kunze, J. and T. Baker, "The Dublin Core Metadata Element
              Set", RFC 5013, August 2007.

   [RSSSYND]  RSS-DEV Working Group, "RDF Site Summary 1.0 Modules:
              Syndication", Dec 2000.




Voss, et al.            Expires December 23, 2012              [Page 15]

Internet-Draft                   Beacon                        June 2012


   [SAX]      Bradner, D., "SAX 1.0: The Simple API for XML", May 1998.

   [Sitemaps]
              Google Inc., "Sitemaps XML format", February 2008.

   [TURTLE]   Beckett, D. and T. Berners-Lee, "Turtle - Terse RDF Triple
              Language", Mar 2011.


Appendix A.  Interpreting BEACON links

   The interpretation of links in a BEACON dump is not restricted to a
   specific format.  The most common use cases are RDF triples and links
   in HTML.

A.1.  RDF triples

   If link type is an URI, each link in a BEACON dump can be mapped to
   an RDF triple with:

   -  link source as RDF subject,

   -  link type as RDF property,

   -  link target as RDF object.

   As RDF is not defined on URIs but on URI references or IRIs, link
   source and link target URI MUST be transformed to an IRI by following
   the process defined in Section 3.2 of [RFC3987].

   The link qualifier MAY result in an additional triple with a literal
   value as RDF object.  For instance the following link, in BEACON
   text:

   #QUALIFIER: http://www.w3.org/2000/01/rdf-schema#label
   http://example.org|example|http://example.com

   could be mapped to the following RDF triples:

   <http://example.org> rdfs:seeAlso <http://example.com> .
   <http://example.com> rdfs:label "example" .

   A typical use case is to use qualifiers as "number of hits" at a
   target resource.  For instance:







Voss, et al.            Expires December 23, 2012              [Page 16]

Internet-Draft                   Beacon                        June 2012


   #PREFIX: http://example.org/
   #TARGET: http://example.com/
   #LINK: http://xmlns.com/foaf/0.1/primaryTopic
   #QUALIFIER: http://purl.org/dc/terms/extent

   abc|12

   could be mapped to the following RDF triples:

   <http://example.org/abc> foaf:primaryTopic <http://example.com/abc> .
   <http://example.com/abc> dcterms:extent "12" .

   Another possible interpretation of link qualifier is additional
   information about the relationship, for instance when it was created
   (reification).

   See Section 3.2 for mappings of meta fields to RDF triples about the
   BEACON dump.

   In addition, the "prefix" and "target" fields MAY be mapped to
   "http://rdfs.org/ns/void#uriRegexPattern" and/or
   "http://rdfs.org/ns/void#uriSpace" from the VoID vocabulary.

A.2.  HTML links

   A BEACON link can be mapped to a HTML link ("<a>" element) as
   following:

   -  link source corresponds to the website which a HTML link is
      included at,

   -  link target corresponds to the "href" attribute,

   -  link qualifier corresponds to the textual content,

   For instance the following link, given in BEACON text format:

    http://example.com|example|http://example.org

   can be mapped to the following HTML link:

    <a href="http://example.org">example</a>

   The qualifier, however, may be the empty string.  The meta field
   "name" may be used alternatively as textual content.  The relation
   type may also be used to automatically create an appropriate link
   label, such as "same entity" for relation type
   "http://www.w3.org/2002/07/owl#sameAs" or "more information about



Voss, et al.            Expires December 23, 2012              [Page 17]

Internet-Draft                   Beacon                        June 2012


   this" for relation type "http://xmlns.com/foaf/0.1/isPrimaryTopicOf".


Appendix B.  RELAX NG Schema for BEACON XML

   Below is a schema of BEACON XML (Section 5.2) in RELAX NG Compact
   syntax [RELAX-NGC].  The schema is non-normative and given for
   reference only.

   default namespace = "http://purl.org/net/beacon"

   element beacon {
     attribute prefix      { text }.
     attribute target      { text },
     attribute link        { xsd:anyURI },
     attribute message     { text },
     attribute name        { text },
     attribute description { text },
     attribute institution { text },
     attribute reference   { xsd:anyURI },
     attribute contact     { text },
     attribute creator     { text },
     attribute feed        { xsd:anyURI },
     attribute timestamp   { text },
     attribute update { "always" | "hourly" | "daily"
       | "weekly" | "monthly" | "yearly" | "never" },
     attribute qualifier   { xsd:anyURI },
     element link {
       attribute id        { text },
       attribute target    { text }?,
       attribute about     { text }?,
       empty
     }*
   }

   A short example of a file in BEACON XML format is given below:

   <?xml version="1.0" encoding="UTF-8"?>
   <beacon xmlns="http://purl.org/net/beacon"
           prefix="http://example.org/"
           target="http://example.org/">
      <link id="foo" target="bar" />
      ...TODO: better example...
   </beacon>







Voss, et al.            Expires December 23, 2012              [Page 18]

Internet-Draft                   Beacon                        June 2012


Authors' Addresses

   Jakob Voss
   Verbundzentrale des GBV
   Platz der Goettinger Sieben 1
   Goettingen  37073
   Germany

   Phone: +49(551)39-10242
   Email: voss@gbv.de


   Mathias Schindler
   Wikimedia Deutschland e.V.
   Obentrautstr. 72
   Berlin  10963
   Germany

   Phone: +49(30)21915826-0
   Email: mathias.schindler@wikimedia.de


   Thomas Berger
   Gymel.com
   Im Dahl 35
   Bonn  53117
   Germany

   Email: ThB@gymel.com






















Voss, et al.            Expires December 23, 2012              [Page 19]

