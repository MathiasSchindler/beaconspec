


Network Working Group                                            J. Voss
Internet-Draft                                   Verbundzentrale des GBV
Intended status: Informational                                  May 2012
Expires: November 2, 2012


                        BEACON link dump format
                          draft-voss-beacon-00

Abstract

   This document specifies BEACON, a data interchange format for large
   numbers of uniform links.

Status of this Memo

   This Internet-Draft is submitted in full conformance with the
   provisions of BCP 78 and BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF).  Note that other groups may also distribute
   working documents as Internet-Drafts.  The list of current Internet-
   Drafts is at http://datatracker.ietf.org/drafts/current/.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   This Internet-Draft will expire on November 2, 2012.

Copyright Notice

   Copyright (c) 2012 IETF Trust and the persons identified as the
   document authors.  All rights reserved.

   This document is subject to BCP 78 and the IETF Trust's Legal
   Provisions Relating to IETF Documents
   (http://trustee.ietf.org/license-info) in effect on the date of
   publication of this document.  Please review these documents
   carefully, as they describe your rights and restrictions with respect
   to this document.  Code Components extracted from this document must
   include Simplified BSD License text as described in Section 4.e of
   the Trust Legal Provisions and are provided without warranty as
   described in the Simplified BSD License.






Voss                    Expires November 2, 2012                [Page 1]

Internet-Draft                   Beacon                         May 2012


Table of Contents

   1.  Introduction . . . . . . . . . . . . . . . . . . . . . . . . .  3
     1.1.  Overview . . . . . . . . . . . . . . . . . . . . . . . . .  3
     1.2.  Notational Conventions . . . . . . . . . . . . . . . . . .  3
     1.3.  Whitespace Normalization . . . . . . . . . . . . . . . . .  4
     1.4.  URI patterns . . . . . . . . . . . . . . . . . . . . . . .  4
   2.  Links  . . . . . . . . . . . . . . . . . . . . . . . . . . . .  5
   3.  Meta fields  . . . . . . . . . . . . . . . . . . . . . . . . .  6
     3.1.  prefix . . . . . . . . . . . . . . . . . . . . . . . . . .  6
     3.2.  target . . . . . . . . . . . . . . . . . . . . . . . . . .  6
     3.3.  link . . . . . . . . . . . . . . . . . . . . . . . . . . .  6
     3.4.  contact  . . . . . . . . . . . . . . . . . . . . . . . . .  6
     3.5.  message  . . . . . . . . . . . . . . . . . . . . . . . . .  7
     3.6.  description  . . . . . . . . . . . . . . . . . . . . . . .  7
     3.7.  institution  . . . . . . . . . . . . . . . . . . . . . . .  7
     3.8.  name . . . . . . . . . . . . . . . . . . . . . . . . . . .  7
     3.9.  feed . . . . . . . . . . . . . . . . . . . . . . . . . . .  7
     3.10. about  . . . . . . . . . . . . . . . . . . . . . . . . . .  7
     3.11. timestamp  . . . . . . . . . . . . . . . . . . . . . . . .  7
     3.12. update . . . . . . . . . . . . . . . . . . . . . . . . . .  8
   4.  Link fields  . . . . . . . . . . . . . . . . . . . . . . . . .  8
   5.  Serialization  . . . . . . . . . . . . . . . . . . . . . . . . 10
     5.1.  BEACON text format . . . . . . . . . . . . . . . . . . . . 10
     5.2.  BEACON XML format  . . . . . . . . . . . . . . . . . . . . 11
   6.  Security Considerations  . . . . . . . . . . . . . . . . . . . 12
   7.  References . . . . . . . . . . . . . . . . . . . . . . . . . . 12
     7.1.  Normative References . . . . . . . . . . . . . . . . . . . 12
     7.2.  Informative References . . . . . . . . . . . . . . . . . . 12
   Appendix A.  Interpreting BEACON links . . . . . . . . . . . . . . 13
     A.1.  HTML links . . . . . . . . . . . . . . . . . . . . . . . . 13
     A.2.  RDF triples  . . . . . . . . . . . . . . . . . . . . . . . 13
     A.3.  Resource discovery from authority files  . . . . . . . . . 14
   Appendix B.  RELAX NG Schema for BEACON XML  . . . . . . . . . . . 14
   Author's Address . . . . . . . . . . . . . . . . . . . . . . . . . 15
















Voss                    Expires November 2, 2012                [Page 2]

Internet-Draft                   Beacon                         May 2012


1.  Introduction

1.1.  Overview

   BEACON is a data interchange format for large numbers of uniform
   links.  A BEACON link dump consists of:

   -  a set of links (Section 2), each derived from a set of link fields
      (Section 4),

   -  a set of meta fields (Section 3).

   All links typically share a common URI pattern for source and for
   target, respectively.  For instance a BEACON dump could consist of
   links between two domains that use different local identifier
   systems:

   http://example.org/{ID1} ---> http://example.com/{ID2}

   A special case is the use of the same local identifier that can be
   used to construct both, source and target of a link, for instance:

   http://example.org/{ID}  ---> http://example.org/?id={ID}&action=view

   A BEACON link dump can be serialized in a condense BEACON text format
   (Section 5.1) and in BEACON XML format (Section 5.2).

1.2.  Notational Conventions

   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
   document are to be interpreted as described in [RFC2119].

   The formal grammar rules in this document are to be interpreted as
   described in [RFC5234], including the following core ABNF syntax
   rules:















Voss                    Expires November 2, 2012                [Page 3]

Internet-Draft                   Beacon                         May 2012


   ALPHA          =  %x41-5A / %x61-7A   ; A-Z / a-z

   DIGIT          =  %x30-39             ; 0-9

   HEXDIG         =  DIGIT / "A" / "B" / "C" / "D" / "E" / "F"

   HTAB           =  %x09                ; horizontal tab

   LF             =  %x0A                ; linefeed

   CR             =  %x0D                ; carriage return

   SP             =  %20                 ; space

1.3.  Whitespace Normalization

   A Unicode string is normalized according to this specification, by
   stripping leading and trailing whitespace and by replacing all
   "WHITESPACE" character sequences by a single space ("SP").

   WHITESPACE     =  1*( CR | LF | HTAB | SP )

1.4.  URI patterns

   A URI pattern in this specification is an URI Template, as defined in
   [RFC6570], with all template expressions being either "{ID}" for
   simple string expansion or "{+ID}" for reserved expansion.  If no
   template expression is given, the pattern MUST be processed as if the
   expression "{ID}" was appended.  For this reason the following URI
   patterns are equal:

    http://example.org/
    http://example.org/{ID}

   A URI pattern is used to construct a URI by replacing all template
   expressions with an identifier value.  All identifier characters in
   the "unreserved" range from [RFC3986], and characters in the
   "reserved" range or character sequences matching the "pct-encoded"
   rule for expressions being "{+ID}", are copied literally.  All other
   characters are copied the URI as the sequence of pct-encoded triplets
   corresponding to that character's encoding in UTF-8 [RFC3629].  The
   referenced character ranges are imported here from [RFC3986] for
   convenience:








Voss                    Expires November 2, 2012                [Page 4]

Internet-Draft                   Beacon                         May 2012


    pct-encoded    =  "%" HEXDIG HEXDIG
    unreserved     =  ALPHA / DIGIT / "-" / "." / "_" / "~"
    reserved       =  gen-delims / sub-delims
    gen-delims     =  ":" / "/" / "?" / "#" / "[" / "]" / "@"
    sub-delims     =  "!" / "$" / "&" / "'" / "(" / ")"
                   /  "*" / "+" / "," / ";" / "="

   A URI pattern is allowed to contain the broader set of characters
   allowed in Internationalized Resource Identifiers (IRI) [RFC3987].
   The URI constructed from a URI pattern by template processing can be
   transformed to an IRI by following the process defined in Section 3.2
   of [RFC3987].

    Example value    Expression   Copied as

     path/dir          {ID}        path%2Fdir
     path/dir          {+ID}       path/dir
     Hello World!      {ID}        Hello%20World%21
     Hello World!      {+ID}       Hello%20World!
     Hello%20World     {ID}        Hello%2520World
     Hello%20World     {+ID}       Hello%20World
     Mueller            {ID}        M%C3%BCller
     Mueller            {+ID}       M%C3%BCller
     M%C3%BCller       {ID}        M%25C3%25BCller
     M%C3%BCller       {+ID}       M%C3%BCller


2.  Links

   A link in BEACON is a typed connection between two resources that are
   identified by URIs [RFC3986], and is compromised of:

   -  a source URI,

   -  a target URI

   -  a relation type,

   -  an optional label,

   -  an optional description.

   A link relation type is either a registered link type from the IANA
   link relations registry [RFC5988] or an URI that uniquely identifies
   the relation type.  Link label and link description are normalized
   Unicode strings that annotate a link.  The meaning of this
   annotations is not defined in this specification, but guidelines are
   given in Appendix A.



Voss                    Expires November 2, 2012                [Page 5]

Internet-Draft                   Beacon                         May 2012


   A BEACON link dump is an annotated set of links with identical link
   type, which is specified by the link meta field (Section 3.3).  In a
   serialized BEACON link dump (Section 5) a link is specified by link
   fields (Section 4), which a link is constructed from.


3.  Meta fields

   A BEACON dump MAY be annotated with a set of meta fields.  Each meta
   field is identified by its name, build of lowercase letters "a-z".
   Valid fields are listed in the following.  Additional meta fields,
   not defined in this specification SHOULD be ignored.  All meta field
   values MUST be normalized Unicode strings Section 1.3.  Meta fields
   with the empty string as field value MUST be ignored.

3.1.  prefix

   The prefix field specifies an URI pattern that is used to construct
   link sources.  The name "prefix" was choosen to keep backwards
   compatibility with existing BEACON dumps.

3.2.  target

   The target field specifies an URI pattern to construct link targets.

3.3.  link

   The link field specifies the link type for all links in a BEACON
   dump.  In BEACON text format (Section 5.1) the link MAY be specified
   enclosed in angle brackets if it is an URI, so the following BEACON
   text link fields are equal:

   #LINK: http://www.w3.org/2002/07/owl#sameAs
   #LINK: <http://www.w3.org/2002/07/owl#sameAs>

   The default link type field value is the URI
   "http://www.w3.org/2000/01/rdf-schema#seeAlso".

3.4.  contact

   The contact field contains an email address or similar contact
   information to reach the maintainer of the BEACON dump.  The contact
   SHOULD be a mailbox address as specified in section 3.4 of [RFC5322],
   for instance:

   admin@example.com
   Barbara Beacon <b.beacon@example.org>




Voss                    Expires November 2, 2012                [Page 6]

Internet-Draft                   Beacon                         May 2012


3.5.  message

   The message meta field is used as template or as default value for
   link labels.

3.6.  description

   The description meta field is used as template or as default value
   for link descriptions.

3.7.  institution

   The institution meta field contains the name of an institution or
   publisher responsible for the link targets and/or responsible for the
   BEACON dump.

3.8.  name

   The name meta field contains a name or title of the BEACON dump
   and/or of all of its targets.  For instance if all links point to
   resources in a database, the name meta field contains the name of the
   database.

3.9.  feed

   The feed field contains an URL, conforming to [RFC3986], where to
   download the BEACON dump from.

3.10.  about

   The about field contains an URL of a website with additional
   information about this BEACON link dump.

3.11.  timestamp

   The timestamp field contains the date of last modification of the
   BEACON dump.  This date MUST conform to the "full-date" or to the
   "date-time" production rule in [RFC3339].  In addition, an uppercase
   "T" character MUST be used to separate date and time, and an
   uppercase "Z" character MUST be present in the absence of a numeric
   time zone offset.  Some examples of valid timestamp values:

   2012-05-30
   2012-05-30T15:17:36+02:00
   2012-05-30T13:17:36Z






Voss                    Expires November 2, 2012                [Page 7]

Internet-Draft                   Beacon                         May 2012


3.12.  update

   The update field specifies how frequently the BEACON dump is likely
   to change.  The field corresponds to the "<changefreq>" element in
   Sitemaps XML format [Sitemaps].  Valid values are:

   -  "always"

   -  "hourly"

   -  "daily"

   -  "weekly"

   -  "monthly"

   -  "yearly"

   -  "never"

   The value "always" SHOULD be used to describe BEACON dumps that
   change each time they are accessed.  The value "never" SHOULD be used
   to describe archived BEACON dumps.


4.  Link fields

   Each link in a serialized BEACON dump is given in form of up to four
   fields:

   -  id field,

   -  optional label field,

   -  optional description field,

   -  optional target field.

   From these fields, combined with the BEACON dump's meta fields
   (Section 3), the full link (Section 2) is derived.  All field values
   MUST be normalized (Section 1.3) before further processing.  The full
   link is then derived as following:

   The *link source* is constructed based on the id field and the prefix
   meta field (Section 3.1) URI pattern.  If no URI pattern was
   specified, the default value "{ID}" is used instead.  The link source
   is then constructed by replacing all occurrences of "{ID}" in the URI
   pattern by the id field.



Voss                    Expires November 2, 2012                [Page 8]

Internet-Draft                   Beacon                         May 2012


   The *link target* is constructed based on

   -  the id field,

   -  the target field,

   -  the target meta field (Section 3.2) URI pattern

   with the following cases:

   -  If the target field is specified, then:

      -  If the target meta field is specified then the *target field*
         is inserted as "{ID}" expression into the patten, to get the
         link target.

      -  If the target meta field is not specified, then the link target
         is the *target field*.

   -  If the target field is not specified, then:

      -  If the target meta field is specified then the *id field* is
         inserted as "{ID}" expression into the patten, to get the link
         target.

      -  If the target meta field is not specified, then the link target
         is the *id field*.

   Both, link source and link target MUST be a syntactically valid URI.
   A client MUST ignore links with invalid URIs and it SHOULD give a
   warning.

   The *link label* is derived from the label field and the message meta
   field (Section 3.5) as following:

   -  If the message meta field contains the substring "{label}" and the
      label field is not the empty string, then the substring "{label}"
      is replaced by the label field to get the link label.

   -  If otherwise the labeln field is not the empty string, the link
      label equals to the label field.

   -  Otherwise the link label equals to the message meta field.

   The *link description* is derived from the description field, from
   the label field, and from the description meta field (Section 3.6) as
   following:




Voss                    Expires November 2, 2012                [Page 9]

Internet-Draft                   Beacon                         May 2012


   -  If the description meta field contains the substring "{label}" and
      the label field is not the empty string, then the substring
      "{label}" is replaced by the label field to get the link
      description.

   -  If otherwise the description field is not the empty string, the
      link description equals to the description field.

   -  Otherwise the link description equals to the description meta
      field.

   Both, link label and link description MUST be normalized
   (Section 1.3) after construction.  A missing link label or link
   description equals to the empty string.


5.  Serialization

5.1.  BEACON text format

   A BEACON text file is an UTF-8 encoded Unicode file [RFC3629], split
   into lines by line breaks.  The file consists of a set of lines with
   meta fields, followed by a set of lines with link fields.  A BEACON
   text file MAY begin with an Unicode Byte Order Mark and it SHOULD end
   with a line break:

   BEACONTEXT  =  [ BOM ] *metaline [ LINEBREAK ] links [ LINEBREAK ]

   BOM         =  %xEF.BB.BF      ; Unicode UTF-8 Byte Order Mark

   LINEBREAK   =  *( CR / LF )    ; at least linefeed or carriage return

   An empty line SHOULD be used to separate meta lines and link lines.
   The order of meta lines and the order of link lines is irrelevant.

   A meta line specifies a meta field (Section 3) and its value:

   metaline       =  "#" metafield ":" metavalue LINEBREAK

   metafield = "PREFIX" | "TARGET" | "LINK" | "CONTACT" | "MESSAGE" |
               "DESCRIPTION" | "INSTITUTION" | "NAME" | "ABOUT" |
               "FEED" | "TIMESTAMP" | "UPDATE"

   metavalue = STRING

   Each link ...TODO...





Voss                    Expires November 2, 2012               [Page 10]

Internet-Draft                   Beacon                         May 2012


   links    = link *( LINEBREAK link )

   VBAR     = "|"                ; vertical bar
   link     = ID [ VBAR TARGET ] ...

   The terminal symbol "STRING" can be any UTF-8 string that does not
   include a "LINEBREAK".

   The terminal symbols "ID" and "TARGET" each can be any UTF-8 string
   that does not include a "LINEBREAK" or a "VBAR".

5.2.  BEACON XML format

   A BEACON XML file is a valid XML file conforming to the following
   schema.  The file SHOULD be encoded in UTF-8 [RFC3629].  The file
   MUST:

   -  Begin with an opening "<beacon>" tag and end with a closing
      "</beacon>" tag.

   -  Specify the default namespace "http://purl.org/net/example".

   -  Include an empty "<link/>" tag for each link.

   -  Include the link id (Section 4) as XML attribute "id" of each
      "<link/>" element.

   The file MAY further:

   -  Specify meta fields (Section 3) as XML attributes to the
      "<beacon>" tag.

   -  Specify link fields "label", "description", and/or "target" as
      attributes to the "<link>" element.

   All attributes MUST be given in lowercase.  An informal schema of
   BEACON XML is given in Appendix B.

   To process BEACON XML, a complete and stream-processing XML parser,
   for instance the Simple API for XML [SAX], is RECOMMENDED, in favor
   of parsing with regular expressions or similar methods prone to
   errors.  Additional XML attributes of "<link>" elements and "<link>"
   elements without "id" attribute SHOULD be ignored.

   Note that in contrast to BEACON text format, link fields MAY include
   line breaks, which are removed by





Voss                    Expires November 2, 2012               [Page 11]

Internet-Draft                   Beacon                         May 2012


6.  Security Considerations

   ...TODO...

   (URLs MAY be used to inject code and label/description MAY be used to
   inject HTML?)


7.  References

7.1.  Normative References

   [RFC2119]  Bradner, S., "Key words for use in RFCs to Indicate
              Requirement Levels", BCP 14, RFC 2119, March 1997.

   [RFC3339]  Klyne, G., Ed. and C. Newman, "Date and Time on the
              Internet: Timestamps", RFC 3339, July 2002.

   [RFC3629]  Yergeau, F., "UTF-8, a transformation format of ISO
              10646", STD 63, RFC 3629, November 2003.

   [RFC3986]  Berners-Lee, T., Fielding, R., and L. Masinter, "Uniform
              Resource Identifier (URI): Generic Syntax", STD 66,
              RFC 3986, January 2005.

   [RFC3987]  Duerst, M. and M. Suignard, "Internationalized Resource
              Identifiers (IRIs)", RFC 3987, January 2005.

   [RFC5234]  Crocker, D. and P. Overell, "Augmented BNF for Syntax
              Specifications: ABNF", STD 68, RFC 5234, January 2008.

   [RFC5322]  Resnick, P., Ed., "Internet Message Format", RFC 5322,
              October 2008.

   [RFC5988]  Nottingham, M., "Web Linking", RFC 5988, October 2010.

   [Unicode]  The Unicode Consortium, "The Unicode Standard, Version
              6.1", April 2012.

7.2.  Informative References

   [RELAX-NGC]
              Clark, J., "RELAX NG Compact Syntax", Nov 2002.

   [RFC6570]  Gregorio, J., Fielding, R., Hadley, M., Nottingham, M.,
              and D. Orchard, "URI Template", RFC 6570, March 2012.

   [SAX]      Bradner, D., "SAX 1.0: The Simple API for XML", May 1998.



Voss                    Expires November 2, 2012               [Page 12]

Internet-Draft                   Beacon                         May 2012


   [Sitemaps]
              Google Inc., "Sitemaps XML format", February 2008.


Appendix A.  Interpreting BEACON links

   The interpretation of links in a BEACON dump is not restricted to a
   specific format.  The most common use cases are HTML links and RDF
   triples.

A.1.  HTML links

   A BEACON link can be mapped to a HTML link ("<a>" element) as
   following:

   -  link source corresponds to the website which a HTML link is
      included at,

   -  link target corresponds to the "href" attribute,

   -  link label corresponds to the textual content,

   -  link description corresponds to the "title" attribute.

   For instance the following link, given in BEACON text format:

   http://example.com|example|sample site|http://example.org

   can be mapped to the following HTML link:

   <a href="http://example.org" title="sample site">example</a>

A.2.  RDF triples

   If link type is an URI, each link in a BEACON dump can be mapped to
   an RDF triple with:

   -  link source as RDF subject,

   -  link type as RDF property,

   -  link target as RDF object.

   Link label and link description may result in additional triples with
   each of name and description as literal value RDF object.  The final
   intepretation of these link annotations, however, is out of the scope
   of this specification (see https://github.com/gbv/beaconspec/issues/2
   for open discussion).



Voss                    Expires November 2, 2012               [Page 13]

Internet-Draft                   Beacon                         May 2012


   For instance the following link, given in BEACON text format

   http://example.com|example|sample site|http://example.org

   can be mapped to the following RDF triples in Turtle format:

   @prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
   @prefix dc: <http://purl.org/dc/elements/1.1/> .

   <http://example.com> rdfs:seeAlso <http://example.org> .

   # additional link annotations, to be discussed
   <http://example.org> rdfs:label "example" ;
                        dc:description "sample site" .

   As RDF is defined on URI references or IRIs, link source and link
   target URI must be transformed to an IRI by following the process
   defined in Section 3.2 of [RFC3987].

A.3.  Resource discovery from authority files

   Consider an authority file with entities defined by an example.org
   institution, and an example.com institution which provides resources
   about these entities.  One can express for instance in BEACON text
   format:

   #PREFIX: http://example.org/entity/
   #TARGET: http://example.com/about/{ID}
   #LINK: http://xmlns.com/foaf/0.1/primaryTopic

   foo

   to state that the resource "http://example.com/about/foo" is about
   the entity "http://example.org/entity/foo".  If the institutions do
   not share local identifiers, but for instance
   "http://example.com/about/xy" is about
   "http://example.org/entity/foo", one can express the link in BEACON
   text format and in BEACON XML format this way:

   foo|||xy

   <link target="xy">foo</link>


Appendix B.  RELAX NG Schema for BEACON XML

   Below is a schema of BEACON XML (Section 5.2) in RELAX NG Compact
   syntax [RELAX-NGC].  The schema is non-normative and given for



Voss                    Expires November 2, 2012               [Page 14]

Internet-Draft                   Beacon                         May 2012


   reference only.

   default namespace = "http://purl.org/net/beacon"

   element beacon {
     attribute prefix      { text }.
     attribute target      { text },
     attribute link        { xsd:anyURI },
     attribute contact     { text },
     attribute message     { text },
     attribute description { text },
     attribute institution { text },
     attribute name        { text },
     attribute about       { xsd:anyURI },
     attribute feed        { xsd:anyURI },
     attribute timestamp   { text },
     attribute update { "always" | "hourly" | "daily"
       | "weekly" | "monthly" | "yearly" | "never" },
     element link {
       attribute id          { text },
       attribute target      { text }?,
       attribute label       { text }?,
       attribute description { text }?,
       empty
     }*
   }


Author's Address

   J. Voss
   Verbundzentrale des GBV
   Platz der Goettinger Sieben 1
   Goettingen,   37073
   DE

   Phone: +49(551)39-10242
   Email: voss@gbv.de













Voss                    Expires November 2, 2012               [Page 15]

