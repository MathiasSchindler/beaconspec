


Network Working Group                                            J. Voss
Internet-Draft                                   Verbundzentrale des GBV
Intended status: Informational                              M. Schindler
Expires: December 3, 2012                     Wikimedia Deutschland e.V.
                                                              Th. Berger
                                                               Gymel.com
                                                               June 2012


                        Beacon link dump format
                          draft-voss-beacon-00

Abstract

   This document specifies Beacon, a data interchange format for large
   numbers of uniform links.

Status of this Memo

   This Internet-Draft is submitted in full conformance with the
   provisions of BCP 78 and BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF).  Note that other groups may also distribute
   working documents as Internet-Drafts.  The list of current Internet-
   Drafts is at http://datatracker.ietf.org/drafts/current/.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   This Internet-Draft will expire on December 3, 2012.

Copyright Notice

   Copyright (c) 2012 IETF Trust and the persons identified as the
   document authors.  All rights reserved.

   This document is subject to BCP 78 and the IETF Trust's Legal
   Provisions Relating to IETF Documents
   (http://trustee.ietf.org/license-info) in effect on the date of
   publication of this document.  Please review these documents
   carefully, as they describe your rights and restrictions with respect
   to this document.  Code Components extracted from this document must
   include Simplified BSD License text as described in Section 4.e of
   the Trust Legal Provisions and are provided without warranty as
   described in the Simplified BSD License.



Voss, et al.            Expires December 3, 2012                [Page 1]

Internet-Draft                   Beacon                        June 2012


Table of Contents

   1.  Introduction . . . . . . . . . . . . . . . . . . . . . . . . .  3
     1.1.  Notational Conventions . . . . . . . . . . . . . . . . . .  3
     1.2.  String normalization . . . . . . . . . . . . . . . . . . .  4
     1.3.  URI patterns . . . . . . . . . . . . . . . . . . . . . . .  4
   2.  Links  . . . . . . . . . . . . . . . . . . . . . . . . . . . .  5
     2.1.  Link fields  . . . . . . . . . . . . . . . . . . . . . . .  6
     2.2.  Relation types . . . . . . . . . . . . . . . . . . . . . .  7
   3.  Meta fields  . . . . . . . . . . . . . . . . . . . . . . . . .  7
     3.1.  Link construction  . . . . . . . . . . . . . . . . . . . .  7
       3.1.1.  prefix . . . . . . . . . . . . . . . . . . . . . . . .  8
       3.1.2.  target . . . . . . . . . . . . . . . . . . . . . . . .  8
       3.1.3.  message  . . . . . . . . . . . . . . . . . . . . . . .  9
     3.2.  Target database  . . . . . . . . . . . . . . . . . . . . .  9
       3.2.1.  name . . . . . . . . . . . . . . . . . . . . . . . . .  9
       3.2.2.  institution  . . . . . . . . . . . . . . . . . . . . .  9
     3.3.  Link dump  . . . . . . . . . . . . . . . . . . . . . . . .  9
       3.3.1.  description  . . . . . . . . . . . . . . . . . . . . .  9
       3.3.2.  creator  . . . . . . . . . . . . . . . . . . . . . . .  9
       3.3.3.  contact  . . . . . . . . . . . . . . . . . . . . . . . 10
       3.3.4.  homepage . . . . . . . . . . . . . . . . . . . . . . . 10
       3.3.5.  feed . . . . . . . . . . . . . . . . . . . . . . . . . 10
       3.3.6.  timestamp  . . . . . . . . . . . . . . . . . . . . . . 11
       3.3.7.  update . . . . . . . . . . . . . . . . . . . . . . . . 11
     3.4.  Interpretation . . . . . . . . . . . . . . . . . . . . . . 12
       3.4.1.  relation . . . . . . . . . . . . . . . . . . . . . . . 12
       3.4.2.  annotation . . . . . . . . . . . . . . . . . . . . . . 12
       3.4.3.  sourcetype . . . . . . . . . . . . . . . . . . . . . . 12
       3.4.4.  targettype . . . . . . . . . . . . . . . . . . . . . . 12
   4.  Beacon files . . . . . . . . . . . . . . . . . . . . . . . . . 12
     4.1.  Beacon text format . . . . . . . . . . . . . . . . . . . . 12
     4.2.  Beacon XML format  . . . . . . . . . . . . . . . . . . . . 13
   5.  Mappings . . . . . . . . . . . . . . . . . . . . . . . . . . . 14
     5.1.  Mapping to RDF . . . . . . . . . . . . . . . . . . . . . . 14
     5.2.  Mapping to HTML  . . . . . . . . . . . . . . . . . . . . . 16
   6.  Security Considerations  . . . . . . . . . . . . . . . . . . . 17
   7.  References . . . . . . . . . . . . . . . . . . . . . . . . . . 17
     7.1.  Normative References . . . . . . . . . . . . . . . . . . . 17
     7.2.  Informative References . . . . . . . . . . . . . . . . . . 18
   Appendix A.  Glossary  . . . . . . . . . . . . . . . . . . . . . . 18
   Appendix B.  RELAX NG Schema for Beacon XML  . . . . . . . . . . . 19
   Authors' Addresses . . . . . . . . . . . . . . . . . . . . . . . . 20








Voss, et al.            Expires December 3, 2012                [Page 2]

Internet-Draft                   Beacon                        June 2012


1.  Introduction

   Beacon is a data interchange format for large numbers of uniform
   links.  A Beacon link dump consists of:

   -  a set of links, each a triple of source URI, target URI, and
      annotation (Section 2),

   -  a set of meta fields (Section 3).

   All links in a link dump typically share a common URI pattern for
   sources and a common URI pattern for targets (Section 1.3).  This
   patterns are used to abbreviate URIs in serializations of link dumps
   as Beacon files (Section 4).  A Beacon file is either given in line-
   oriented, condense Beacon text format (Section 4.1) or in Beacon XML
   format (Section 4.2).

   The set or a superset of all target URIs in a link dump is called its
   target database (Section 3.2).

   An important use-case of Beacon is the creation of HTML links as
   described in section Section 5.2.  A link dump can also be mapped to
   an RDF graph (Section 5.1) so Beacon provides a RDF serialization
   format for a subset of RDF graphs with uniform links.

1.1.  Notational Conventions

   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
   document are to be interpreted as described in [RFC2119].

   The formal grammar rules in this document are to be interpreted as
   described in [RFC5234], including the ABNF core rules "HTAB", "LF",
   "CR", and "SP".  In addition, the minus operator ("-") is used to
   exclude line breaks and vertical bars in the following rules:

    BEACONLINE  =  *CHAR - ( *CHAR LINEBREAK *CHAR )

    BEACONVALUE =  *CHAR - ( *CHAR ( LINEBREAK / VBAR ) *CHAR )

    LINEBREAK   =  LF | CR LF | CR   ; "\n", "\r\n", or "\r"

    VBAR        =  %x7C              ; vertical bar ("|")

   RDF is expressed in Turtle syntax in this document [TURTLE].  The
   following namespace prefixes are used to refer to RDF properties and
   classes from the RDF and RDFS vocabularies [RDF], from the DCMI
   Metadata Terms [DCTERMS], from the FOAF vocabulary [FOAF], the VoID



Voss, et al.            Expires December 3, 2012                [Page 3]

Internet-Draft                   Beacon                        June 2012


   vocabulary [VOID], and the RSS 1.0 Syndication Module [RSSSYND]:

    @prefix rdf:     <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
    @prefix rdfs:    <http://www.w3.org/2000/01/rdf-schema#> .
    @prefix dcterms: <http://purl.org/dc/terms/extent> .
    @prefix foaf:    <http://xmlns.com/foaf/0.1/> .
    @prefix void:    <http://rdfs.org/ns/void#> .
    @prefix rssynd:
            <http://web.resource.org/rss/1.0/modules/syndication/> .

   The blank node ":dump" is used to denote the URI of the link dump and
   the blank node ":database" is used to denote the URI of the target
   database.  The following triples are always assumed in mappings of
   link dumps to RDF:

    :dump a void:Linkset .
    :database a void:Database .

1.2.  String normalization

   A Unicode string is normalized according to this specification, by
   stripping leading and trailing whitespace and by replacing all
   "WHITESPACE" character sequences by a single space ("SP").

    WHITESPACE  =  1*( CR | LF | HTAB | SP )

   The set of allowed Unicode characters in Beacon dumps is the set of
   valid Unicode characters from UCS which can also be expressed in XML
   1.0, excluding some discouraged control characters:

    CHAR        =  WHITESPACE / %x21-7E / %xA0-D7FF / %xE000-FFFD
                /  %x10000-1FFFD / %x20000-2FFFD / %x30000-3FFFD
                /  %x40000-4FFFD / %x50000-5FFFD / %x60000-6FFFD
                /  %x70000-7FFFD / %x80000-8FFFD / %x90000-9FFFD
                /  %xA0000-AFFFD / %xB0000-BFFFD / %xC0000-CFFFD
                /  %xD0000-DFFFD / %xE0000-EFFFD / %xF0000-FFFFD
                /  %x10000-10FFFD

   Applications MAY allow additional characters or disallow additional
   characters by stripping them or by replacing them with the
   replacement character "U+FFFD".  Applications SHOULD further apply
   Unicode Normalization Form Canonical Composition (NFKC) to all
   strings.

1.3.  URI patterns

   A URI pattern in this specification is an URI Template, as defined in
   [RFC6570], with all template expressions being either "{ID}" for



Voss, et al.            Expires December 3, 2012                [Page 4]

Internet-Draft                   Beacon                        June 2012


   simple string expansion or "{+ID}" for reserved expansion.  If no
   template expression is given, the pattern MUST be processed as if the
   expression "{ID}" was appended.  For instance the following URI
   patterns are equal:

    http://example.org/
    http://example.org/{ID}

   A URI pattern is used to construct a URI by replacing all template
   expressions with an identifier value.  All identifier characters in
   the "unreserved" range from [RFC3986], and characters in the
   "reserved" range or character sequences matching the "pct-encoded"
   rule for expressions being "{+ID}", are copied literally.  All other
   characters are copied to the URI as the sequence of pct-encoded
   triplets corresponding to that character's encoding in UTF-8
   [RFC3629].  The referenced character ranges are imported here from
   [RFC3986] for convenience:

    pct-encoded    =  "%" HEXDIG HEXDIG
    unreserved     =  ALPHA / DIGIT / "-" / "." / "_" / "~"
    reserved       =  gen-delims / sub-delims
    gen-delims     =  ":" / "/" / "?" / "#" / "[" / "]" / "@"
    sub-delims     =  "!" / "$" / "&" / "'" / "(" / ")"
                   /  "*" / "+" / "," / ";" / "="

   A URI pattern is allowed to contain the broader set of characters
   allowed in Internationalized Resource Identifiers (IRI) [RFC3987].
   The URI constructed from a URI pattern by template processing can be
   transformed to an IRI by following the process defined in Section 3.2
   of [RFC3987].

    Example value    Expression   Copied as

     path/dir          {ID}        path%2Fdir
     path/dir          {+ID}       path/dir
     Hello World!      {ID}        Hello%20World%21
     Hello World!      {+ID}       Hello%20World!
     Hello%20World     {ID}        Hello%2520World
     Hello%20World     {+ID}       Hello%20World
     M%C3%BCller       {ID}        M%25C3%25BCller
     M%C3%BCller       {+ID}       M%C3%BCller


2.  Links

   A link in a link dump is a directed connection between two resources
   that are identified by URIs [RFC3986].  A link is compromised of
   three elements:



Voss, et al.            Expires December 3, 2012                [Page 5]

Internet-Draft                   Beacon                        June 2012


   -  a source URI,

   -  a target URI,

   -  an annotation.

   Source URI and target URI define where a link is pointing from and to
   respectively.  The annotation is an optional whitespace-normalized
   Unicode string that can be used to further describe the link or parts
   of it.  A missing annotation is equal to the empty string.
   Annotations MUST match the grammar rule "BEACONVALUE".

   Link elements are given in abbreviated form as link fields when
   serialized in a Beacon file (Section 2.1).  With a relation type
   (Section 2.2) links can be mapped to RDF triples (Section 5.1) and to
   HTML links (Section 5.2).

2.1.  Link fields

   Each link in a serialized link dump is constructed from a "source
   field", a "target field", and an "annotation field", combined with a
   set of meta fields (Section 3.1).  The source field is mandatory.
   The annotation field is set to the empty string if missing.  The
   target field is set to the source field if missing.  All field values
   MUST be whitespace-normalized before further processing.  The full
   link is then constructed as following:

   -  The link source is constructed from the "prefix" meta field URI
      pattern by inserting the source field as identifier value, as
      defined in Section 1.3.

   -  The link target is constructed from the "target" meta field URI
      pattern by inserting the target field as identifier value, as
      defined in Section 1.3.

   -  The link annotation is constructed from the "message" meta field
      by literally replacing every occurrence of the character sequence
      "{annotation}" by the annotation field.  The resulting string MUST
      be whitespace-normalized after construction additional encoding
      MUST NOT be applied.

   Constructed link sources and link targets MUST be syntactically valid
   URIs.  Applications MUST ignore links with invalid URIs and SHOULD
   give a warning.  Note that annotation fields are ignored if the
   "message" meta field does not contain the sequence "{annotation}".
   Applications SHOULD give a warning in this case.

   The following table illustrates construction of a link:



Voss, et al.            Expires December 3, 2012                [Page 6]

Internet-Draft                   Beacon                        June 2012


    meta field  +  link field  -->  link element
   ----------------------------------------------
    prefix      |  source       |   source
    target      |  target       |   target
    message     |  annotation   |   annotation

2.2.  Relation types

   All links in a link dump share a common relation type.  A relation
   type is either an URI or a registered link type from the IANA link
   relations registry [RFC5988].  The relation type is specified by the
   "relation" meta field in Beacon files (Section 3).

   Some examples of relation types:

    http://www.w3.org/2002/07/owl#sameAs
    http://xmlns.com/foaf/0.1/isPrimaryTopicOf
    http://purl.org/spar/cito/cites
    describedby
    replies


3.  Meta fields

   A link dump SHOULD contain a set of meta fields, each identified by
   its name build of lowercase letters "a-z".  Relevant meta fields for
   link construction (Section 3.1), description of the target database
   (Section 3.2), description of the link dump (Section 3.3), and
   interpretation of links (Section 3.4) are defined in the following.
   Additional meta fields, not defined in this specification, SHOULD be
   ignored.  All meta field values MUST be whitespace-normalized
   (Section 1.2).  Missing meta field values and empty strings MUST be
   set to the field's default value, which is the empty string unless
   noted otherwise.

3.1.  Link construction

   The meta fields "prefix", "target", and "message" are used to
   abbreviate links in form of link fields in a Beacon file, as
   described in Section 2.1.  Applications SHOULD ignore these fields
   after they have been used to construct a full link dump with mapping
   to RDF from a serialized Beacon file.  In particular, applications
   MUST NOT differentiate between equal links constructed from different
   abbreviations.  Equal links in one Beacon file SHOULD be ignored and
   it is RECOMMENDED to indicate duplicated links with a warning.

   For instance the following Beacon text file contains a single link:




Voss, et al.            Expires December 3, 2012                [Page 7]

Internet-Draft                   Beacon                        June 2012


    #PREFIX: http://example.org/
    #TARGET: http://example.com/
    #MESSAGE: Hello World!

    foo

   The same link could also be serialized without any meta fields:

    http://example.org/foo|Hello World!|http://example.com/foo

   The default meta fields values could also be specified as:

    #PREFIX: {+ID}
    #TARGET: {+ID}
    #MESSAGE: {annotation}

   Another possible serialization is:

    #PREFIX: http://example.org/
    #TARGET: http://example.com/
    #MESSAGE: Hello {annotation}

    foo|World!

   The link line in this example is equal to:

    foo|World!|foo

3.1.1.  prefix

   The prefix field specifies an URI pattern that is used to construct
   link sources.  If no prefix meta field was specified, the default
   value "{+ID}" is used.  The name "prefix" was choosen to keep
   backwards compatibility with existing Beacon files.

   Applications MAY map the prefix field to the RDF property
   "void:uriSpace" or "void:uriRegexPattern" with ":dump" as subject,
   when mapping to RDF.

3.1.2.  target

   The target field specifies an URI pattern to construct link targets.
   If no target meta field was specified, the default value "{+ID}" is
   used.

   Applications MAY map the target field to the RDF property
   "void:uriSpace" or "void:uriRegexPattern" with ":database" as
   subject, when mapping to RDF.



Voss, et al.            Expires December 3, 2012                [Page 8]

Internet-Draft                   Beacon                        June 2012


3.1.3.  message

   The message meta field is used as template for link annotations.  The
   default value is "{annotation}".

3.2.  Target database

3.2.1.  name

   The name meta field contains a name or title of target database.
   This field is mapped to the RDF property "dcterms:title".  For
   instance the name meta field value "ACME documents" can be mapped to
   this RDF triple:

   :database dcterms:title "ACME documents" .

3.2.2.  institution

   The institution meta field contains the name or URI of the
   organization or of an individual responsible for making available the
   target database.  This field is maped to the RDF property
   "dcterms:publisher".  For instance the institution meta field value
   "ACME" can be mapped to this RDF triple:

   :database dcterms:publisher "ACME" .

3.3.  Link dump

3.3.1.  description

   The description meta field contains a human readable description of
   the link dump.  This field is mapped to the "dcterms:description" RDF
   property.  For instance the description meta field value "Mapping
   from ids to documents" can be mapped to this RDF triple:

   :dump dcterms:description "Mapping from ids to documents" .

3.3.2.  creator

   The creator meta field contains the URI or the name of the person,
   organization, or a service primarily responsible for making the link
   dump.  This field is mapped to the "dcterms:creator" RDF property.
   The creator is an instace of the class "foaf:Agent".

   For instance the following creator meta field values:

   Bea Beacon




Voss, et al.            Expires December 3, 2012                [Page 9]

Internet-Draft                   Beacon                        June 2012


   http://example.org/people/bea

   can be mapped the the following RDF triples, respectively:

   :dump dcterms:creator "Bea Beacon" .
   :dump dcterms:creator [ a foaf:Agent ; foaf:name "Bea Beacon" ] .

   :dump dcterms:creator <http://example.org/people/bea> .
   <http://example.org/people/bea> a foaf:Agent .

   This field SHOULD NOT contain a simple URL unless this URL is also
   used as URI.

3.3.3.  contact

   The contact meta field contains an email address or similar contact
   information to reach the creator of the link dump.  The field value
   SHOULD be a mailbox address as specified in section 3.4 of [RFC5322],
   for instance:

    admin@example.com

    Bea Beacon <bea@example.org>

   The contact meta field is mapped to the "foaf:mbox" and to the
   "foaf:name" RDF properties.  The domain of the the contact meta field
   is the Beacon dump.  The sample field values can be mapped to:

    :dump dcterms:creator [
        foaf:mbox <mailto:admin@example.com>
    ] .

    :dump dcterms:creator [
        foaf:name "Bea Beacon" ;
        foaf:mbox <mailto:bea@example.org>
    ] .

3.3.4.  homepage

   The homepage field contains an URL of a website with additional
   information about this link dump.  This field is mapped to the RDF
   property "foaf:homepage".  Note that this field does not specify the
   homepage of the target database.

3.3.5.  feed

   The feed field contains an URL, where to download the link dump from.
   This field corresponds to the "void:dataDump" RDF property.  An



Voss, et al.            Expires December 3, 2012               [Page 10]

Internet-Draft                   Beacon                        June 2012


   example mapped to an RDF triple:

   :dump void:dataDump <http://example.com/beacon.txt> .

3.3.6.  timestamp

   The timestamp field contains the date of last modification of the
   link dump.  Note that this value MAY be different to the last
   modification time of a Beacon file that serializes the link dump.
   The timestamp value MUST conform to the "full-date" or to the
   "date-time" production rule in [RFC3339].  In addition, an uppercase
   "T" character MUST be used to separate date and time, and an
   uppercase "Z" character MUST be present in the absence of a numeric
   time zone offset.  This field corresponds to the "dcterms:modified"
   property.

   For instance the following valid timestamp values:

    2012-05-30
    2012-05-30T15:17:36+02:00
    2012-05-30T13:17:36Z

   can be mapped to the following RDF triples, respectively:

    :dump dcterms:modified "2012-05-30"
    :dump dcterms:modified "2012-05-30T15:17:36+02:00"
    :dump dcterms:modified "2012-05-30T13:17:36Z"

3.3.7.  update

   The update field specifies how frequently the link dump is likely to
   change.  The field corresponds to the "<changefreq>" element in
   Sitemaps XML format [Sitemaps].  Valid values are:

   -  "always"

   -  "hourly"

   -  "daily"

   -  "weekly"

   -  "monthly"

   -  "yearly"

   -  "never"




Voss, et al.            Expires December 3, 2012               [Page 11]

Internet-Draft                   Beacon                        June 2012


   The value "always" SHOULD be used to describe link dumps that change
   each time they are accessed.  The value "never" SHOULD be used to
   describe archived link dumps.  Please note that the value of this tag
   is considered a hint and not a command.

   The RDF property of this field is "rssynd:updatePeriod".

3.4.  Interpretation

   The following meta fields SHOULD be used to indicate the actual
   meaning of links in a link dump.

3.4.1.  relation

   The relation field specifies the relation type for all links in a
   link dump.  The field value MUST be an URI.  The default relation
   type is "rdfs:seeAlso".

3.4.2.  annotation

   The annotation field specifies the RDF property between link target
   and link annotation.  The default value is "rdf:value" having no
   specific meaning [RDF].

3.4.3.  sourcetype

   The sourcetype field specifies the type of entities identified by
   source URIs.  The field value MUST be an URI.

3.4.4.  targettype

   The sourcetype field specifies the type of entities identified by
   target URIs.  The field value MUST be an URI.


4.  Beacon files

4.1.  Beacon text format

   A Beacon text file is an UTF-8 encoded Unicode file [RFC3629], split
   into lines by line breaks.  The file consists of a set of lines with
   meta fields, followed by a set of lines with link fields.  A Beacon
   text file MAY begin with an Unicode Byte Order Mark and it SHOULD end
   with a line break:

    BEACONTEXT  =  [ BOM ] [ START ] *METALINE *EMPTY [ LINKS ]

    BOM         =  %xEF.BB.BF     ; Unicode UTF-8 Byte Order Mark



Voss, et al.            Expires December 3, 2012               [Page 12]

Internet-Draft                   Beacon                        June 2012


   At least one empty line SHOULD be used to separate meta lines and
   link lines.  The order public of meta lines and the order of link
   lines is irrelevant.

   EMPTY        =  *( *WHITESPACE LINEBREAK )

   The Beacon text file SHOULD start with an additional, fixed meta
   field:

    START       =  "#FORMAT:" +WHITESPACE "BEACON" LINEBREAK

   A meta line specifies a meta field (Section 3) and its value.  Meta
   field names are case insensitive and SHOULD be given in uppercase
   letters.

    METALINE    =  "#" METAFIELD ":" METAVALUE LINEBREAK

    METAFIELD   =  "PREFIX" / "TARGET" / "RELATION" / "MESSAGE"
                /  "NAME" / "DESCRIPTION" / "INSTITUTION"
                /  "ANNOTATION" / "HOMEPAGE"
                /  "CONTACT" / "FEED" / "TIMESTAMP" / "UPDATE"

    METAVALUE   =  BEACONLINE

   Each link is given on a link line with its source field, optionally
   follwed by additional fields:

    LINKS       =  LINK *( LINEBREAK LINK ) [ LINEBREAK ]

    LINK        =  SOURCE [ VBAR ANNOTATION [ VBAR TARGET ] ]

    SOURCE      =  BEACONVALUE

    TARGET      =  BEACONVALUE

    ANNOTATION  =  BEACONVALUE

4.2.  Beacon XML format

   A Beacon XML file is a valid XML file conforming to the following
   schema.  The file SHOULD be encoded in UTF-8 [RFC3629].  The file
   MUST:

   -  Begin with an opening "<beacon>" tag and end with a closing
      "</beacon>" tag.

   -  Specify the default namespace "http://purl.org/net/example".




Voss, et al.            Expires December 3, 2012               [Page 13]

Internet-Draft                   Beacon                        June 2012


   -  Include an empty "<link/>" tag for each link.

   -  Include the source field (Section 2.1) as XML attribute "source"
      of each "<link/>" element.

   The file MAY further:

   -  Specify meta fields (Section 3) as XML attributes to the
      "<beacon>" tag.

   -  Specify link fields "target" and/or "about" as attributes to the
      "<link>" element.

   All attributes MUST be given in lowercase.  An informal schema of
   Beacon XML files is given in Appendix B.

   To process Beacon XML files, a complete and stream-processing XML
   parser, for instance the Simple API for XML [SAX], is RECOMMENDED, in
   favor of parsing with regular expressions or similar methods prone to
   errors.  Additional XML attributes of "<link>" elements and "<link>"
   elements without "source" attribute SHOULD be ignored.

   Note that in contrast to Beacon text files, link fields MAY include
   line breaks, which are removed by whitespace normalization.
   Furthermore id field, annotation field and target field MAY include a
   vertical bar, which is encoded as "%7C" during construction the link.


5.  Mappings

5.1.  Mapping to RDF

   Each link can be mapped to at least one RDF triple with:

   -  the source URI used as subject IRI,

   -  the relation type used as predicate,

   -  the target URI used as object IRI.

   As RDF is not defined on URIs but on URI references or IRIs, all URIs
   MUST be transformed to an IRI by following the process defined in
   Section 3.2 of [RFC3987].  Applications MAY reject mapping link dumps
   with relation type from the IANA link relations registry, in lack of
   official URIs.  Another valid solution is to extend the RDF model by
   using blank nodes as predicates.

   The annotation SHOULD result in an additional RDF triple, unless its



Voss, et al.            Expires December 3, 2012               [Page 14]

Internet-Draft                   Beacon                        June 2012


   value equals to the empty string.  The additional triple is mapped
   with:

   -  the target URI used as subject IRI,

   -  the "annotation" meta field used as predicate,

   -  the annotation value used as literal object.

   Applications MAY ignore annotations and map annotations to different
   kinds of RDF triples if the "annotation" meta field is the default
   value "rdf:value".  For instance an annotation could contain
   additional information about a link such as its provenience, date, or
   probability (reification).

   Typical use cases of annotations include specification of labels and
   a "number of hits" at the target database.  For instance the
   following Beacon file in Beacon text format (Section 4.1):

    #PREFIX: http://example.org/
    #TARGET: http://example.com/
    #RELATION: http://xmlns.com/foaf/0.1/primaryTopic
    #ANNOTATION: http://purl.org/dc/terms/extent

    abc|12|xy

   is mapped to the following RDF triples:

    <http://example.org/abc> foaf:primaryTopic <http://example.com/xy> .
    <http://example.com/xy> dcterms:extent "12" .

   If the sourcetype and/or targettype meta field is specified, another
   triple can be created for each link with:

   -  source URI (or target URI respectively) as subject IRI

   -  the predicate "rdf:type"

   -  sourcetype (or targettype respectively) as object URI

   For instance the following link dump:

    #RELATION:   http://xmlns.com/foaf/0.1/isPrimaryTopicOf
    #SOURCETYPE: http://xmlns.com/foaf/0.1/Person
    #TARGETTYPE: http://xmlns.com/foaf/0.1/Document

    http://example.org/foo||http://example.com/bar




Voss, et al.            Expires December 3, 2012               [Page 15]

Internet-Draft                   Beacon                        June 2012


   can be mapped to three RDF triples:

    <http://example.org/foo> a foaf:Person ;
        foaf:isPrimaryTopicOf <http://example.com/bar> .
    <http://example.com/bar> a foaf:Document .

5.2.  Mapping to HTML

   This document does not specify a single mapping of links in a Beacon
   link dump to links in a HTML document, so the following description
   is non-normative.

   A link in a Beacon dump can be mapped to a HTML link ("<a>" element)
   as following:

   -  link source corresponds to the website which a HTML link is
      included at,

   -  link target corresponds to the "href" attribute,

   -  link annotation corresponds to the textual content,

   For instance the following link, given in a Beacon text file:

    http://example.com|example|http://example.org

   can be mapped to the following HTML link:

    <a href="http://example.org">example</a>

   Note that the annotation field value may be the empty string.  In
   practice, additional meta fields SHOULD be used to construct
   appropriate HTML links.  For instance the meta fields

    #RELATION: http://xmlns.com/foaf/0.1/isPrimaryTopicOf
    #SOURCETYPE: http://xmlns.com/foaf/0.1/Person
    #NAME: ACME documents

   can be used to create a link such as

    <span>
      More information about this person
      <a href="http://example.com/foo">at ACME documents</a>.
    </span>

   because "foaf:isPrimaryTopicOf" translates to "more information
   about", "foaf:Person" translates to "this person", and the target
   database's name can be used as link label.



Voss, et al.            Expires December 3, 2012               [Page 16]

Internet-Draft                   Beacon                        June 2012


6.  Security Considerations

   Programs should be prepared for malformed and malicious content when
   parsing Beacon files, when constructing links from link fields, and
   when mapping links to RDF or HTML.  Possible attacks of parsing
   contain broken UTF-8 and buffer overflows.  Link construction can
   result in unexpectedly long strings and character sequences that may
   be harmless when analyzed as parts.  Most notably, Beacon data may
   store strings containing HTML and JavaScript code to be used for
   cross-site scripting attacks on the site displaying Beacon links.
   Applications should therefore escape or filter accordingly all
   content with established libraries, such as Apache Escape Utils.


7.  References

7.1.  Normative References

   [DCTERMS]  DCMI Usage Board, "DCMI Metadata Terms", Oct 2010.

   [RFC2119]  Bradner, S., "Key words for use in RFCs to Indicate
              Requirement Levels", BCP 14, RFC 2119, March 1997.

   [RFC3339]  Klyne, G., Ed. and C. Newman, "Date and Time on the
              Internet: Timestamps", RFC 3339, July 2002.

   [RFC3629]  Yergeau, F., "UTF-8, a transformation format of ISO
              10646", STD 63, RFC 3629, November 2003.

   [RFC3986]  Berners-Lee, T., Fielding, R., and L. Masinter, "Uniform
              Resource Identifier (URI): Generic Syntax", STD 66,
              RFC 3986, January 2005.

   [RFC3987]  Duerst, M. and M. Suignard, "Internationalized Resource
              Identifiers (IRIs)", RFC 3987, January 2005.

   [RFC5234]  Crocker, D. and P. Overell, "Augmented BNF for Syntax
              Specifications: ABNF", STD 68, RFC 5234, January 2008.

   [RFC5322]  Resnick, P., Ed., "Internet Message Format", RFC 5322,
              October 2008.

   [RFC5988]  Nottingham, M., "Web Linking", RFC 5988, October 2010.

   [RFC6570]  Gregorio, J., Fielding, R., Hadley, M., Nottingham, M.,
              and D. Orchard, "URI Template", RFC 6570, March 2012.

   [Unicode]  The Unicode Consortium, "The Unicode Standard, Version



Voss, et al.            Expires December 3, 2012               [Page 17]

Internet-Draft                   Beacon                        June 2012


              6.1", April 2012.

7.2.  Informative References

   [FOAF]     Brickley, D. and L. Miller, "FOAF Vocabulary
              Specification", Aug 2010.

   [RDF]      Hayes, P., "RDF Semantics", Feb 2004.

   [RELAX-NGC]
              Clark, J., "RELAX NG Compact Syntax", Nov 2002.

   [RFC5013]  Kunze, J. and T. Baker, "The Dublin Core Metadata Element
              Set", RFC 5013, August 2007.

   [RSSSYND]  RSS-DEV Working Group, "RDF Site Summary 1.0 Modules:
              Syndication", Dec 2000.

   [SAX]      Bradner, D., "SAX 1.0: The Simple API for XML", May 1998.

   [Sitemaps]
              Google Inc., "Sitemaps XML format", February 2008.

   [TURTLE]   Beckett, D. and T. Berners-Lee, "Turtle - Terse RDF Triple
              Language", Mar 2011.

   [VOID]     Cyganiak, R., Zhao, J., Alexander, K., and M. Hausenblas,
              "Vocabulary of Interlinked Datasets (VoID)", Mar 2011.


Appendix A.  Glossary

   Beacon  is a data interchange format as specified in this document.

   Beacon file  is a link dump serialized in Beacon text format or
      Beacon XML format.

   Beacon text format  is a condense format to serialize link dumps as
      specified in this document.

   Beacon XML format  is an XML format to serialize link dumps as
      specified in this document.

   link  is a triple of source URI, target URI, and annotation.







Voss, et al.            Expires December 3, 2012               [Page 18]

Internet-Draft                   Beacon                        June 2012


   link dump  is a set of links and meta fields with common relation
      type for all links.

   link field  is a Unicode string in a Beacon files used to construct a
      link

   target database  is the set (or superset) of all target URIs in a
      link dump.

   relation type  a common releation between targets and sources in a
      link dump.


Appendix B.  RELAX NG Schema for Beacon XML

   Below is a schema of Beacon XML format (Section 4.2) in RELAX NG
   Compact syntax [RELAX-NGC].  The schema is non-normative and given
   for reference only.

   default namespace = "http://purl.org/net/beacon"

   element beacon {
     attribute prefix      { text }.
     attribute target      { text },
     attribute message     { text },
     attribute name        { text },
     attribute institution { text },
     attribute description { text },
     attribute creator     { text },
     attribute contact     { text },
     attribute homepage    { xsd:anyURI },
     attribute feed        { xsd:anyURI },
     attribute timestamp   { text },
     attribute update { "always" | "hourly" | "daily"
       | "weekly" | "monthly" | "yearly" | "never" },
     attribute relation    { xsd:anyURI },
     attribute annotation  { xsd:anyURI },
     attribute sourcetype  { xsd:anyURI },
     attribute targettype  { xsd:anyURI },
     element link {
       attribute source     { text },
       attribute target     { text }?,
       attribute annotation { text }?,
       empty
     }*
   }

   A short example of a Beacon XML file is given below:



Voss, et al.            Expires December 3, 2012               [Page 19]

Internet-Draft                   Beacon                        June 2012


   <?xml version="1.0" encoding="UTF-8"?>
   <beacon xmlns="http://purl.org/net/beacon"
           prefix="http://example.org/"
           target="http://example.com/"
           name="ACME document">
      <link source="foo" target="bar" />
      <link source="foo" />
      <link source="doz" annotation="baz" />
   </beacon>


Authors' Addresses

   Jakob Voss
   Verbundzentrale des GBV
   Platz der Goettinger Sieben 1
   Goettingen  37073
   Germany

   Phone: +49(551)39-10242
   Email: voss@gbv.de


   Mathias Schindler
   Wikimedia Deutschland e.V.
   Obentrautstr. 72
   Berlin  10963
   Germany

   Phone: +49(30)21915826-0
   Email: mathias.schindler@wikimedia.de


   Thomas Berger
   Gymel.com
   Im Dahl 35
   Bonn  53117
   Germany

   Email: ThB@gymel.com











Voss, et al.            Expires December 3, 2012               [Page 20]

